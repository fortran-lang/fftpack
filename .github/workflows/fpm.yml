name: fpm

on: [push, pull_request]

jobs:
  gcc-build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        gcc_v: [14] # Version of GFortran we want to use.
        include:
        - os: ubuntu-latest
          os-arch: linux-x86_64

        - os: macos-latest
          os-arch: macos-x86_64

    env:
      FC: gfortran
      GCC_V: ${{ matrix.gcc_v }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v1

    - name: Install GFortran macOS
      if: contains(matrix.os, 'macos')
      run: |
        ln -s /usr/local/bin/gfortran-${GCC_V} /usr/local/bin/gfortran
        which gfortran-${GCC_V}
        which gfortran

    - name: Install GFortran Linux
      if: contains(matrix.os, 'ubuntu')
      run: |
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_V} 100 \
        --slave /usr/bin/gfortran gfortran /usr/bin/gfortran-${GCC_V} \
        --slave /usr/bin/gcov gcov /usr/bin/gcov-${GCC_V}
    
    - name: Install fpm
      uses: fortran-lang/setup-fpm@v3
      with:
        fpm-version: 'v0.8.2'

    - name: Build fftpack
      run: |
        gfortran --version
        fpm build

    - name: Run tests
      run: |
        gfortran --version
        fpm test

  msys2-build:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:
      - uses: actions/checkout@v2
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          path-type: inherit
          install: |
            mingw-w64-x86_64-gcc-fortran
            mingw-w64-x86_64-fpm

      - name: fpm build
        run: |
          gfortran --version
          fpm --version
          fpm build

      - name: fpm test
        run: |
          fpm test

  intel-build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    env:
      FPM_FC: ifort
      FC: ifort

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Add Intel repository (Linux)
      run: |
        wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
        sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
        rm GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
        echo "deb https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
        sudo apt-get update

    - name: Install Intel oneAPI compiler (Linux)
      run: |
        sudo apt-get install intel-oneapi-compiler-fortran

    - name: Setup Intel oneAPI environment
      run: |
        source /opt/intel/oneapi/setvars.sh
        printenv >> $GITHUB_ENV

    - name: Install fpm
      uses: fortran-lang/setup-fpm@v3
      with:
        fpm-version: 'v0.8.2'

    - name: fpm build
      run: |
        ifort --version
        fpm --version
        fpm build --profile debug --flag "-warn nointerfaces"

    - name: fpm test
      run: |
        fpm test --profile debug --flag "-warn nointerfaces"